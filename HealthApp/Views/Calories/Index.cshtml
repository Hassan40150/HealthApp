@model HealthApp.ViewModels.CaloriesViewModel




<!-- Range Selector -->
<label for="rangeSlider">Select Time Range:</label>
<input type="range"
       id="rangeSlider"
       name="rangeSlider"
       min="0"
       max="5"
       step="1"
       value="@((int)Model.SelectedRange)" />
<div id="rangeLabel" class="fw-bold"></div>

<br />
<br />

<!-- Raw Data Output -->
<h2>Today's Calories: <span id="TodaysCalories">@Model.TodaysCalories kcal</span></h2>
<h2>Today's Progress: <span id="TodaysProgress">@Model.TodaysProgressPercentage%</span></h2>

<h2>Average Intake (Selected Range): <span id="AverageIntake">@Model.AverageIntake kcal/day</span></h2>
<h2>Highest Daily Intake: <span id="HighestIntake">@Model.HighestIntake kcal</span></h2>
<h2>Lowest Daily Intake: <span id="LowestIntake">@Model.LowestIntake kcal</span></h2>

<h2>Net Deficit/Surplus: <span id="NetDeficitSurplus">@Model.NetDeficitSurplus kcal</span></h2>
<h2>Predicted Weekly Weight Change: <span id="PredictedWeightChange">@Model.PredictedWeeklyWeightChange kg</span></h2>
<h2>Estimated Days to Reach Goal: <span id="EstimatedDaysToGoal">@Model.EstimatedDaysToGoal days</span></h2>

<h2>Calorie Goal Adherence: <span id="GoalAdherence">@Model.GoalAdherencePercentage%</span></h2>
<h2>Days Met Calorie Goal: <span id="DaysMetGoal">@Model.DaysMetGoal days</span></h2>
<h2>Days Under Calorie Goal: <span id="DaysUnderGoal">@Model.DaysUnderGoal days</span></h2>
<h2>Last Missed Goal Day: <span id="LastMissedGoalDay">@Model.LastMissedGoalDay</span></h2>

<script>
    const rangeOptions = [
        '1 Week',
        '2 Weeks',
        '3 Months',
        '6 Months',
        '12 Months',
        '24 Months'
    ];

    function updateRangeLabel(val) {
        document.getElementById('rangeLabel').innerText = rangeOptions[val];
    }

    async function reloadData(val) {
        try {
            const response = await fetch(`/calories/getdata?range=${val}`);
            const data = await response.json();

            document.getElementById('TodaysCalories').innerText = data.todaysCalories + ' kcal';
            document.getElementById('TodaysProgress').innerText = data.todaysProgressPercentage + '%';

            document.getElementById('AverageIntake').innerText = data.averageIntake + ' kcal/day';
            document.getElementById('HighestIntake').innerText = data.highestIntake + ' kcal';
            document.getElementById('LowestIntake').innerText = data.lowestIntake + ' kcal';

            document.getElementById('NetDeficitSurplus').innerText = data.netDeficitSurplus + ' kcal';
            document.getElementById('PredictedWeightChange').innerText = data.predictedWeeklyWeightChange + ' kg';
            document.getElementById('EstimatedDaysToGoal').innerText = data.estimatedDaysToGoal + ' days';

            document.getElementById('GoalAdherence').innerText = data.goalAdherencePercentage + '%';
            document.getElementById('DaysMetGoal').innerText = data.daysMetGoal + ' days';
            document.getElementById('DaysUnderGoal').innerText = data.daysUnderGoal + ' days';
            document.getElementById('LastMissedGoalDay').innerText = data.lastMissedGoalDay;

        } catch (error) {
            console.error('Error fetching calorie data:', error);
        }
    }

    document.addEventListener('DOMContentLoaded', function () {
        updateRangeLabel(document.getElementById('rangeSlider').value);

        document.getElementById('rangeSlider').addEventListener('input', function () {
            updateRangeLabel(this.value);
        });

        document.getElementById('rangeSlider').addEventListener('change', function () {
            reloadData(this.value);
        });
    });
</script>
