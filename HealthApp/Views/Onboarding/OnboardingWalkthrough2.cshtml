@model HealthApp.ViewModels.Onboarding.Walkthrough2ViewModel

@{
    ViewData["Title"] = "Your Calorie Goal";
    var minMonths = 3;
    var maxMonths = 24;
}

<div class="max-w-xl mx-auto text-center">
    <h2 class="text-2xl font-semibold mb-4">Your Daily Calorie Goal</h2>

    <p class="mb-4">
        Based on your current and goal weight, to reach your goal in
        <span id="month-label">@Model.TimelineMonths</span> month(s),
        you need to consume:
    </p>

    <h1 class="text-3xl font-bold text-blue-600 mb-6">
        <span id="calorie-goal">@Model.RecommendedCalories</span> calories/day
    </h1>

    <form asp-action="OnboardingWalkthrough2" method="post">
        <input type="hidden" asp-for="TDEE" />
        <input type="hidden" asp-for="StartingWeight" />
        <input type="hidden" asp-for="GoalWeight" />
        <input type="hidden" asp-for="GoalType" />
        <input type="hidden" id="recommendedCalories" name="RecommendedCalories" value="@Model.RecommendedCalories" />

        <label for="timeline-slider" class="font-medium">Goal Timeline (months):</label>
        <input type="range"
               id="timeline-slider"
               name="TimelineMonths"
               min="@minMonths"
               max="@maxMonths"
               value="@Model.TimelineMonths"
               class="w-full mt-2 mb-6" />

        <button type="submit" class="bg-blue-600 text-white px-6 py-2 rounded shadow">
            Continue
        </button>
    </form>
</div>

@section Scripts {
    <script>
        const slider = document.getElementById("timeline-slider");
        const monthLabel = document.getElementById("month-label");
        const calorieGoalDisplay = document.getElementById("calorie-goal");
        const recommendedInput = document.getElementById("recommendedCalories");

        const tdee = @Model.TDEE;
        const start = @Model.StartingWeight;
        const goal = @Model.GoalWeight;
        const goalType = "@Model.GoalType".toLowerCase();

        slider.addEventListener("input", () => {
            const months = parseInt(slider.value);
            monthLabel.textContent = months;

            const weightDiff = Math.abs(goal - start);
            const totalCals = weightDiff * 7700;
            const dailyAdjust = totalCals / (months * 30);

            let newGoal = tdee;
            if (goalType === "lose") newGoal = tdee - dailyAdjust;
            else if (goalType === "gain") newGoal = tdee + dailyAdjust;

            const roundedGoal = Math.round(newGoal);
            calorieGoalDisplay.textContent = roundedGoal;
            recommendedInput.value = roundedGoal;
        });
    </script>
}
